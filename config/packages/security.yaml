security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            eloquent:
                model: App\Model\User
                attribute: login
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_token:
            pattern: ^/token$
            security: false
        api:
            pattern: ^/spice
            security: true
            stateless: true
            oauth2: true
        main:
            lazy: true
            provider: app_user_provider
            json_login:
                check_path: login
            logout:
                path: /logout
                target: logout_message
    access_control:
        - { path: ^/spice, roles: ROLE_OAUTH2_SPICE }
        - { path: ^/refresh, roles: ROLE_USER }
        - { path: ^/test, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
