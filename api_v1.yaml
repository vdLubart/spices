openapi: 3.0.3
info:
  title: Swagger Spices @ Home
  description: |-
    Document described available API endpoints for the Spices application
  termsOfService: http://swagger.io/terms/
  contact:
    email: sl.lubart@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.2.0
servers:
  - url: http://spices.home
    description: local environment
  - url: http://api.spices.drobchak.name
    description: production environment
tags:
  - name: spice
    description: Describe spices at home
  - name: auth
    description: Provide authorization endpoints
paths:
  /login:
    post:
      tags:
        - auth
      summary: Authorize in the application
      description: User login form to authentificate in the system
      operationId: login
      requestBody:
        description: Authorize in the system and receive access_token and refresh_token
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User login
                password:
                  type: string
                  description: User password
      responses:
        '200':
          description: Authorization susscesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '401':
          description: Access denied due to wrong login or password
  /refresh:
    get:
      tags:
        - auth
      summary: Refresh "access_token" after it's expiration.
      description: The endpoint exchanges refresh_token to the new valid access_token without providing user password.
      operationId: refreshToken
      responses:
        '200':
          description: Issued a new "access_token"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '401':
          description: User is not authorized
      security:
        - basicAuth: [ ]
  /logout:
    post:
      tags:
        - auth
      summary: Logout user
      description: Logout user from the system
      operationId: logout
      responses:
        '204':
          description: User logged out successfully
        '401':
          description: User is not authorized
      security:
        - basicAuth: [ ]
  /v1/spice:
    post:
      tags:
        - spice
      summary: Add a new spice to the store
      description: Add a new spice to the store
      operationId: addSpice
      requestBody:
        description: Create a new spice in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSpice'
        required: true
      responses:
        '201':
          description: New spice created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spice'
        '401':
          description: User is not authorized
        '422':
          description: Data validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      security:
        - bearerAuth: []
    put:
      tags:
        - spice
      summary: Update an existing spice
      description: Update an existing spice by Id
      operationId: updateSpice
      requestBody:
        description: Update an existent spice in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spice'
        required: true
      responses:
        '200':
          description: Spice was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spice'
        '401':
          description: User is not authorized
        '404':
          description: Spice not found
        '422':
          description: Data validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      security:
        - bearerAuth: []
    patch:
      tags:
        - spice
      summary: Update one or few parameters of an existing spice
      description: Partical update an existing spice by Id
      operationId: patchSpice
      requestBody:
        description: Partical update an existing spice by Id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchSpice'
        required: true
      responses:
        '200':
          description: Spice was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spice'
        '401':
          description: User is not authorized
        '404':
          description: Spice not found
        '422':
          description: Data validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      security:
        - bearerAuth: []
  /v1/spice/{id}:
    get:
      tags:
        - spice
      summary: Receive information over the spice
      description: Get spice info by Id
      operationId: getSpice
      parameters:
        - name: id
          in: path
          description: ID of spice to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Spice is found in the store
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spice'
        '401':
          description: User is not authorized
        '404':
          description: Spice not found
      security:
        - bearerAuth: []
    delete:
      tags:
        - spice
      summary: Delete a spice
      description: Delete a spice by id
      operationId: deleteSpice
      parameters:
        - name: id
          in: path
          description: The spice id that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Spice is deleted
        '401':
          description: User is not authorized
        '404':
          description: Spice not found
      security:
        - bearerAuth: []
  /v1/spice/list/:
    get:
      tags:
        - spice
      summary: Get spices list
      description: Get paginated list of spices
      operationId: spiceList
      parameters:
        - in: query
          name: query
          schema:
            $ref: '#/components/schemas/PaginatedQuery'
      responses:
        '200':
          description: Get spice list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
        '401':
          description: User is not authorized
      security:
        - bearerAuth: []
  /v1/spice/list/{status}:
    get:
      tags:
        - spice
      summary: Get list of spices with the specific status
      description: Get paginated list of spices with the specific status
      operationId: spiceList
      parameters:
        - name: status
          in: path
          description: Status of spices to be shown
          required: true
          schema:
            type: string
            enum: [ full, running_out, out_of_stock ]
        - in: query
          name: query
          schema:
            $ref: '#/components/schemas/PaginatedQuery'
      responses:
        '200':
          description: Get spice list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaginatedResponse'
        '401':
          description: User is not authorized
      security:
        - bearerAuth: []
  /v1/spices:
    patch:
      tags:
        - spice
      summary: Mass update spices to set status
      description: Updates mulitple spices to set some status. The endpoint ignores wrongly validated ids.
      operationId: massUpdateSpices
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ids
                - status
              properties:
                ids:
                  type: array
                  items:
                    type: string
                    example: '1'
              allOf:
                - $ref: '#/components/schemas/SpiceStatus'
      responses:
        '207':
          description: Return a list with patched spices. If some of provided id's was wrong, the amount of returned entities will be less than amount of requested id's.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Spice'
        '401':
          description: User is not authorized
        '422':
          description: Status validation error. Wrongly validated statuses are ignored.
      security:
        - bearerAuth: []
  /v1/spice/list/statuses:
    get:
      tags:
        - spice
      summary: Return statuses list and count related spices
      description: Return statuses list and count related spices. The list additionally contains 'all' item and counts of all known spices
      operationId: spiceStatusList
      responses:
        '200':
          description: Successfuly returned status list
          content:
            application/json:
              schema:
                type: object
                properties:
                  full:
                    type: integer
                    description: Return amount of spices with the 'full' status.
                    example: 4
                  runningOut:
                    type: integer
                    description: Return amount of spices with the 'runningOut' status.
                    example: 6
                  outOfStock:
                    type: integer
                    description: Return amount of spices with the 'outOfStock' status.
                    example: 1
                  all:
                    type: integer
                    description: Return amount of all spices.
                    example: 11
        '401':
          description: User is not authorized
      security:
        - bearerAuth: [ ]
components:
  schemas:
    SpiceId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
    SpiceStatus:
      type: object
      properties:
        status:
          type: string
          description: spice ability in the store
          enum:
            - full
            - running out
            - out of stock
    SpiceProperties:
      type: object
      properties:
        name:
          type: string
          example: Rosemary
      allOf:
        - $ref: '#/components/schemas/SpiceStatus'
    NewSpice:
      required:
        - name
        - status
      type: object
      allOf:
        - $ref: '#/components/schemas/SpiceProperties'
    Spice:
      allOf:
        - $ref: '#/components/schemas/SpiceId'
        - $ref: '#/components/schemas/SpiceProperties'
      required:
        - id
        - name
        - status
    PatchSpice:
      allOf:
        - $ref: '#/components/schemas/SpiceId'
        - $ref: '#/components/schemas/SpiceProperties'
      required:
        - id
    ValidationError:
      type: object
      properties:
        message:
          type: string
          example: "Validation failed"
        errors:
          type: array
          example: [
            {
              "property": "status",
              "value": "half-full",
              "message": "The value you selected is not a valid choice."
            }
          ]
    PaginatedQuery:
      type: object
      properties:
        q:
          type: string
          example: 'Rosm'
        page:
          type: number
          default: 1
          example: 2
        perPage:
          type: number
          default: 10
          example: 5
    PaginatedResponse:
      type: object
      properties:
        page:
          type: number
          description: The number of the returned page
          default: 1
          example: 2
        perPage:
          type: number
          description: The item amount on the page
          default: 10
          example: 5
        total:
          type: number
          description: Total number of found items
          example: 173
        items:
          type: array
          items:
            $ref: '#/components/schemas/Spice'
    AccessToken:
      type: object
      properties:
        token_type:
          type: string
          description: Authorization token type.
          example: "Bearer"
        expired_in:
          type: integer
          description: Time in seconds during which the "access_token" is valid.
          example: 3600
        access_token:
          type: string
          description: JWT token to access protected API endpoints.
          example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIyZGE0MGM1ZWVlNGY3MmY4YWU4MmExNjc5ZGJmNmNkYyIsImp0aSI6IjE3YTljMjllMGIyMWY4MTBiNTk3M2Y5NjJlNDQzMjg0MjQxYmRiMzZjNTdhNDBiYzI1Y2EwYjRiZmU2ZjE4MDljMWRmNjYzYjU0Yzk1MWE0IiwiaWF0IjoxNzA1Mzg4ODYwLjQwOTQ0MywibmJmIjoxNzA1Mzg4ODYwLjQwOTQ0NywiZXhwIjoxNzA1MzkyNDYwLjM3MDg1Mywic3ViIjoibHViYXJ0Iiwic2NvcGVzIjpbInNwaWNlIl19.ZWt2Rxw1UfPjQNO_BlxXO1ejwXlbwwpH6MSmGnCbR1MEtbrPdivTU8gRgdNvzK0P15YGAorF_xqreXo7AqsjwKeO5vK4eHBPUyjK_eAjq6Uks2XJH4VIYhGC1wiRQsOBese3TNzNbDZbbA3FqJajSod3MXDdedaVK82e3nXW526F8Kqkng3EP6QXaYrpS-r2TOky8W_BuveIB65mBnHlYMbCgpZLsJpOtRES47hocpk-cmZOBNnUFODtNT6-vLskxbhxi1DK3CTtqsc_x9ZOfy6SQjLdyrEoZN_N72p5p4G8Q47t18f9khkb6EusqFrsWQK23ci1O4Nsritdr6Jxfg"
        refresh_token:
          type: string
          description: Long-term token to refresh "access_token" after it's expiration.
          example: "def502006f4bdca05809563e60b6018aa978b2bffcc3b76a1f97799f7c35b1d1191ebcf077dad31d099f8f8deb906d6f4f01a63101f3788298b9dbff0f648001a3e2a3a6b998a4c778a0ebc12492e4b89b0ebcdd7d8618779d1561b8855b39ec3df39e385b0ed435403ddaaea1c9721ef0cd06359b8d7fa9e7061199100ca6b916716786ff6645e371e5b0d57969910e7e0f912e59b919d3e1caa230d0552d9245db8d51da253a2b2fe3e9ea8a4a5764f07da91316a492026f1c88296bc19180346fcae6def34af0fa5b7683872c6899ed367c1694dc031d7d2643055e455ec0cf4e64a4c9555e46ad6bb1d3e910d24cc94b5dea3aa108e4e6cbae9fdffcb9feaed33308a6e68a7768931fdfe01fd900e547baa4f0a1173357099cd2f3956eead30640bca3ba6b419a5aec379deb298cd214576fa4de15035f6d98d693c662a483feaa88cbd916e9e40a08a0bf5f458046c3ad328e8542780342f89b0675792d94575291f968afe91e28661a91fea3f057482bdf2ea3ce2b394c831cb4c60d92326dd8410c34012007b3bc8b893a"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
